name: Unit Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - name: Checkout fe repository
        uses: actions/checkout@v4
        with:
          path: fe

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: fe/pnpm-lock.yaml

      - name: Setup SSH for interpreters repository
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.INTERPRETERS_DEPLOY_KEY }}

      - name: Checkout interpreters repository
        run: |
          git clone git@github.com:exercism/jiki-interpreters.git interpreters

      - name: Debug directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
          echo "Contents of fe directory:"
          ls -la fe/
          echo "Contents of interpreters directory:"
          ls -la interpreters/
          echo "Check if pnpm-workspace.yaml exists in fe:"
          cat fe/pnpm-workspace.yaml

      - name: Install all workspace dependencies
        working-directory: fe
        run: |
          # Install from fe directory which will handle the workspace
          pnpm install --frozen-lockfile

      - name: Debug after install
        run: |
          echo "Contents of fe/node_modules:"
          ls -la fe/node_modules/ | head -20
          echo "Check if interpreters symlink exists:"
          ls -la fe/node_modules/interpreters || echo "No symlink found"
          echo "Check interpreters dist:"
          ls -la interpreters/dist/ || echo "No dist folder"

      - name: Run linter
        working-directory: fe
        run: pnpm run lint

      - name: Run unit tests
        working-directory: fe
        run: |
          echo "Running tests from: $(pwd)"
          echo "Test files:"
          find tests -name "*.test.*" -type f | grep -v e2e
          pnpm run test --coverage --ci

      - name: Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          file: ./fe/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
